name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Create Release and Publish NuGet
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: |
          8.0.x
          9.0.x

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libfontconfig1 libgdiplus libc6-dev

    - name: Extract version from tag
      id: extract_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

    - name: Restore dependencies
      run: dotnet restore src/DimonSmart.PdfCropper/DimonSmart.PdfCropper.csproj

    - name: Build project
      run: dotnet build src/DimonSmart.PdfCropper/DimonSmart.PdfCropper.csproj --configuration Release --no-restore -p:Version=${{ steps.extract_version.outputs.VERSION }} -p:PackageVersion=${{ steps.extract_version.outputs.VERSION }}

    - name: Create package
      run: dotnet pack src/DimonSmart.PdfCropper/DimonSmart.PdfCropper.csproj --configuration Release --no-build -p:Version=${{ steps.extract_version.outputs.VERSION }} -p:PackageVersion=${{ steps.extract_version.outputs.VERSION }} --output ./artifacts

    - name: Publish CLI (win-x64 single file)
      run: dotnet publish src/DimonSmart.PdfCropper.Cli/DimonSmart.PdfCropper.Cli.csproj --configuration Release --runtime win-x64 --self-contained true /p:PublishSingleFile=true /p:IncludeNativeLibrariesForSelfExtract=true --output ./artifacts/cli-win-x64

    - name: Prepare CLI artifact (Windows)
      run: mv ./artifacts/cli-win-x64/DimonSmart.PdfCropper.Cli.exe ./artifacts/PdfCropper.Cli-win-x64.exe

    - name: Publish CLI (linux-x64 single file)
      run: dotnet publish src/DimonSmart.PdfCropper.Cli/DimonSmart.PdfCropper.Cli.csproj --configuration Release --runtime linux-x64 --self-contained true /p:PublishSingleFile=true /p:IncludeNativeLibrariesForSelfExtract=true --output ./artifacts/cli-linux-x64

    - name: Prepare CLI artifact (Linux)
      run: mv ./artifacts/cli-linux-x64/DimonSmart.PdfCropper.Cli ./artifacts/PdfCropper.Cli-linux-x64

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          ./artifacts/*.nupkg
          ./artifacts/PdfCropper.Cli-win-x64.exe
          ./artifacts/PdfCropper.Cli-linux-x64
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Publish to NuGet
      run: dotnet nuget push ./artifacts/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate